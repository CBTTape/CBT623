CONSCMD  TITLE 'ISSUE MVS SYSTEM COMMAND'
*---------------------------------------------------------------------*
* PROGRAM: CONSCMD                                                    *
* AUTHOR : HUNTER ZHOU, ZHOUGH2000@YAHOO.COM                          *
* DESCRIPTION: ISSUE MVS CONSOLE COMMAND TO CONSOLE                   *
*---------------------------------------------------------------------*
* REQUIREMENT:                                                        *
*  1. THE PROGRAM WILL BE RUN IN SUPERVISOR MODE.                     *
*     THE LOADLIB PDS MUST BE IN MVS APF AUTHORIZED LIST.             *
*     SUCH AS APF LIST IN SYS1.PARMLIB(PROGXX)                        *
*  2. OPTIONALLY, THE LOADLIB CAN BE PUT IN MVS LINKLST               *
*     IN SYS1.PARMLIB(PROGXX).                                        *
*     THE PROGRAM IS REENTRENT PROGRAM AND CAN BE LOADED              *
*     INTO LPA LIST (SYS1.PARMLIB(LPALSTXX))                          *
*  3. COMPILE REQUIREMENTS.                                           *
*     THE LINKEDIT OPTION MUST USE 'RENT,A(1)'                        *
*     //JOBCARD...                                                    *
*     //COMPILE EXEC ASMACL,PARM.L='LIST,RENT,AC(1)'                  *
*     //C.SYSIN   DD DISP=SHR,DSN=SP2487.ASM.SOURCE(CONSCMD) THIS ONE *
*     //C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB                         *
*     //          DD DISP=SHR,DSN=SYS1.MODGEN                         *
*     //L.SYSLMOD DD DISP=SHR,DSN=SYS1.USER.LINKLIB  ANY APF LIBRARY  *
*     //L.SYSIN   DD *                                                *
*       NAME CONSCMD(R)                                               *
*     /*                                                              *
*  4. THE USER TO RUN THIS PROGRAM MUST HAVE ENGOUGH AUTHORITY.       *
*     THE SECURITY SOFTWARE WILL CHECK THE AUTHORITY OF THE USERID    *
*     IF HE HAS THE AUTHORITY TO ISSUE THE MVS COMMAND.               *
*---------------------------------------------------------------------*
* USAGE:                                                              *
*  IT SUPPORT FOLLOWING INPUT FORMAT:                                 *
*  I. COMMAND FROM PARM IN JCL EXEC STATEMENT.                        *
*     THE COMMAND IN PARM IS A SINGLE COMMAND FORM                    *
*     FOR EXAMPLE,                                                    *
*     //JOBCARD                                                       *
*     //OFFLINE EXEC PGM=CONSCMD,PARM='V 107A,OFFLINE'                *
*     //STEPLIB DD  DISP=SHR,DSN=SYS1.USER.LINKLIB                    *
*     ...                                                             *
*     //ONLINE  EXEC PGM=CONSCMD,PARM='V 107A,ONLINE'                 *
*     //STEPLIB DD  DISP=SHR,DSN=SYS1.USER.LINKLIB                    *
*                                                                     *
*---------------------------------------------------------------------*
* END OF DESCRIPTION OF THE PROGRAM                                   *
*---------------------------------------------------------------------*
* PROGRAM DESIGN DESCRIPTION                                          *
*                                                                     *
* CONSTANT REGISTERS THROUGH THE WHOLE PROGRAM:                       *
*  R12: BASE ADDRESS                                                  *
*  R11: ADDRESSING FOR DYNAMIC STORAGE                                *
*                                                                     *
* FOLLOWING REGISTERS WILL BE MODIFIED WHILE CALLING MVS MACROS:      *
*   R0, R1, R14, R15                                                  *
*                                                                     *
* FOLLOWING REGISTERS WILL BE USED WITH THEIR PURPOSE:                *
*   R13: THE ADDRESS OF OUR SAVED AREA.                               *
*   R12: BASE ADDRESS                                                 *
*   R11: ADDRESSING FOR DYNAMIC STORAGE                               *
*   R10: THE ADDRESS OF THE STORAGE.                                  *
*   R9 : THE LENGTH OF THE STORAGE                                    *
*   R8 : ANY                                                          *
*   R7 : ANY                                                          *
*   R6 : ANY                                                          *
*   R5 : ANY                                                          *
*   R3 : ANY                                                          *
*   R2 : CALLING THE SUB-ROUTINES (BALR)                              *
*                                                                     *
* PROGRAM DESIGN POINTS:                                              *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         PRINT NOGEN
CONSCMD  CSECT
CONSCMD  AMODE 31
CONSCMD  RMODE ANY
         YREGS
         STM   R14,R12,12(R13)    ;SAVE CALLER'S REGISTERS
         BALR  R12,0              ;
         USING *,R12              ;
         MODID BRANCH=YES         ;
*---------------------------------------------------------------------*
* SAVE THE PARAMETER REGISTER FROM R1 TO R7 BEFORE GETMAIN
*---------------------------------------------------------------------*
         LR    R7,R1              ;SAVE ADDR OF PARM TO R7
*---------------------------------------------------------------------*
* DYNAMICALLY ALLOCATE STORAGE FOR DATA AREAS
*---------------------------------------------------------------------*
         GETMAIN RU,LV=DATAEND           ;OBTAIN STORAGE FOR DATA AREAS
         LR    R11,R1             ;ADDR OF ENTRY POINT
         USING DATAAREA,R11       ;USING R11 AS STOR ADDRESSING REGS.
         ST    R13,SAVEAREA+4     ;SET OUR BACKWARD LINK
         LA    R15,SAVEAREA       ;ADDR OF OUR SAVEAREA
         ST    R15,8(R13)         ;SET CALLER'S FORWARD LINK
         LR    R13,R15            ;ADDR OF OUR SAVEAREA
*---------------------------------------------------------------------*
* SAVE THE PARAMETER TO PRIVATE STORAGE (PARM AND PARMLEN)
*---------------------------------------------------------------------*
         L     R7,0(,R7)          ;LENGTH OF PARM
         LH    R9,0(,R7)          ;LENGTH OF PARM
         LA    R10,2(,R7)         ;POINT AT DATA
         STCM  R9,B'0011',PARMLEN ;COPY THE PARAMETER LENGTH TO PARMLEN
         BCTR  R9,0               ;DECREMENT LENGTH BY 1
         EX    R9,MVCPARM         ;COPY PARMATER TO PARM STORAGE
         SR    R0,R0              ;INDICATE SYSTEM ISSUED COMMAND
*---------------------------------------------------------------------*
* INITIALIZE STORAGE AREA WITH CONSTANT DATA
*---------------------------------------------------------------------*
* GET THE JOBNAME AS TEMPORARY CONSOLE NAME
         LA    R3,TIOTA
         EXTRACT (R3),'S',FIELDS=(TIOT),MF=(E,EXTRMFL) JOB NAME INFO
         L     R3,TIOTA           TIOT ADDRESS
         USING TIOT1,R3           TIOT ADDRESSABILITY
         MVC   CCONNAME,TIOCNJOB  COPY THE JOBNAME AS CONSOL NAME
         MVC   HCCONSNM,TIOCNJOB  COPY THE JOBNAME AS CONSOL NAME
         MVC   CMDLEN,CCMDLEN     CONSOLE COMMAND LENGTH
         DROP  R3
*
*---------------------------------------------------------------------*
* PARPARE OPERPARM
*---------------------------------------------------------------------*
         LA    R8,OPERDATA            ADDRESS OF OPERPARM AREA
         USING MCSOPPRM,R8            IEZVG111 DSECT ADDRESSABILITY
         XC    MCSOPPRM(MCSOPLEN),MCSOPPRM  CLEAR THE OPERPARM AREA
***********************************************************************
* OVERRIDE THE CONSOLE ATTRIBUTES SPECIFIED IN THE USER PROFILE
* OF THE SECURITY PRODUCT BY TURNING ON BIT MCSOVRDY IN THE MCSOP DATA
* AREA. REQUEST THE HARDCOPY ATTRIBUTE (TO RECEIVE HARDCOPY MESSAGE SET
***********************************************************************
         OI    MCSOFLAG,MCSOVRDY      OVERRIDE CONSOLE ATTRIBUTES
         OI    MCSOMISC,MCSOHDCY      REQUEST THE HARDCOPY ATTRIBUTE
         DROP  R8                     DROP ADDRESSABILITY OF IEZVG111
*
*---------------------------------------------------------------------*
* CALL MGCRE TO ISSUE MVS COMMAND
*---------------------------------------------------------------------*
         MODESET MF=(E,MODESUP)    ;SUPERVISOR STATE, KEY 0
***********************************************************************
* ACTIVATE AN EXTENDED MCS CONSOLE WHOSE NAME IS CONTAINED IN A FIELD
* CALLED HCCONSNM.  THE ATTRIBUTES OF THE EXTENDED MCS CONSOLE ARE
* CONTAINED IN A FIELD CALLED OPERDATA, MAPPED BY IEZVG111.  THE
* CONSOLE WILL HAVE ITS MESSAGES DELIVERED ON A FIRST-IN-FIRST-OUT
* BASIS.  THE SYSTEM WILL POST A MESSAGE ECB CALLED HCMECB.
* THE ADDRESS OF THE OUTPUT AREA THAT CONTAINS THE
* ADDRESS OF THE MCS CONSOLE STATUS AREA IS CONTAINED IN A FIELD
* CALLED HCSTATUS.  THE ADDRESS OF THE ALET THAT IDENTIFIES THE ADDRESS
* OR DATA SPACE THAT CONTAINS THE MCS CONSOLE STATUS AREA IS
* CONTAINED IN A FIELD CALLED HCSTATAL.
* THE SYSTEM RETURNS THE CONSOLE ID IN THE FIELD CALLED HCCONSID.
* THE SYSTEM RETURNS A RETURN CODE AND A REASON CODE IN FIELDS
* CALLED HCRETC AND HCRNC, RESPECTIVELY.
***********************************************************************
         MCSOPER REQUEST=ACTIVATE,  ACTIVATE THE CONSOLE               X
               NAME=HCCONSNM,                                          X
               TERMNAME=HCCONSNM,                                      X
               OPERPARM=OPERDATA,                                      X
               MSGDLVRY=FIFO,                                          X
               MSGECB=HCMECB,                                          X
               MCSCSA=HCSTATUS,                                        X
               MCSCSAA=HCSTATAL,                                       X
               CONSID=HCCONSID,                                        X
               RTNCODE=HCRETC,                                         X
               RSNCODE=HCRSNC,                                         X
               MF=(E,MCSOPPL)
         SR    R9,R9               ;CLEAR R9
         ICM   R9,B'0011',PARMLEN  ;LOAD THE PARAMETER LENGTH TO R9
         STCM  R9,B'0011',CMDLEN   ;COPY PARAMETER LENGTH TO CMDLEN
         LA    R10,PARM            ;LOAD THE PARAMETER ADDRESS TO R10
         BCTR  R9,0               ;DECREMENT LENGTH BY 1
         EX    R9,MVCCMDS          ;COPY PARMATER TO PARM STORAGE
*---------------------------------------------------------------------*
* SEND A MESSAGE TO CONSOLE USING WTO MESSAGE
*---------------------------------------------------------------------*
*        SR    R9,R9               ;CLEAR R9
*        ICM   R9,B'0011',PARMLEN  ;LOAD THE PARAMETER LENGTH TO R9
*        ITCM  R9,B'0011',WTOLEN   ;COPY PARAMETER LENGTH TO WTOLEN
*        LA    R10,PARM            ;LOAD PARAMETER ADDRESS TO R10
*        BCTR  R9,0               ;DECREMENT LENGTH BY 1
*        EX    R9,MVCWTO           ;COPY PARMATER TO WTO  STORAGE
*        WTO   TEXT=WTOAREA,MF=(E,WTOCMD) ;SHOW THE COMMAND ON CONSOLE
*
*---------------------------------------------------------------------*
         LA    R10,CMDAREA         ;LOAD THE PARAMETER ADDRESS TO R10
         MGCRE TEXT=(R10),                  ;CALL MVS COMMAND MGCRE    X
               CONSNAME=HCCONSNM,MF=(E,MGCAREA)
         MCSOPER REQUEST=DEACTIVATE,CONSID=HCCONSID,ABTERM=NO,         X
               RTNCODE=HCRETC,RSNCODE=HCRSNC
         MODESET MF=(E,MODEPROB)    ;BACK TO NORMAL STATE
         STIMER WAIT,BINTVL=WAITTIME ;WAIT A LITTLE BIT
*
*---------------------------------------------------------------------*
*  RETURN LINKAGE                                                     *
*---------------------------------------------------------------------*
RETURN   EQU   *
         L     R13,4(R13)         ;ADDR OF CALLER'S SAVEAREA
         FREEMAIN RU,LV=DATAEND,A=(R11)        ; FREE ALLOCATED STOR
         RETURN (14,12),RC=(15)   ;RESTORE CALLER'S REGS AND RETURN
*
*---------------------------------------------------------------------*
*  DATA  AREAS                                                        *
*---------------------------------------------------------------------*
*  LIST FORMS OF MVS MACROS                                           *
*---------------------------------------------------------------------*
MODESUP  MODESET MODE=SUP,KEY=ZERO,MF=L    ;SUPERVISOR STATE
MODEPROB MODESET MODE=PROB,KEY=NZERO,MF=L  ;PROBLEM STATE (NORMAL)
MGCAREA  MGCRE   MF=L                      ;MGCRE
WTOCMD   WTO     TEXT=,MF=L                ;WTO
*---------------------------------------------------------------------*
*  MVC INSTRUCTIONS FOR DATA STORAGE                                  *
*  R10 WILL BE THE LOCATION OF SOURCE STORAGE TO BE COPIED.           *
*  CALLING SYNTAX:                                                    *
*        LA    R10,2(,R1)         ; LOAD THE PARAMETER ADDREDD TO R10 *
*        EX    R9,MVCPARM         ; COPY THE PARAMETER TO PARM        *
*---------------------------------------------------------------------*
MVCPARM  MVC   PARM(0),0(R10)     ;COPY THE PARAMETER TO STORAGE PARM
MVCWTO   MVC   WTOMSG(0),0(R10)   ;COPY THE WTO MESSAGE TO WTOMSG
MVCCMDS  MVC   CMDTEXT(0),0(R10)  ;COPY THE CONSOLE COMMAND TO CMDTEXT
*
CCMDLEN  DC    AL2(126)           ;MAXIMUM COMMAND LENGTH
WAITTIME DC    A(50)              ;WAIT TIME, IN NUMBER/100 SECONDS
         SPACE
*---------------------------------------------------------------------*
*  DSECT DATA, ALLOCATED DYNAMICALLY.                                 *
*---------------------------------------------------------------------*
DATAAREA DSECT
         DS    0F
SAVEAREA DS    18F                ;REGISTER SAVE AREA
CLEAN    DS    CL256' '           ;CLEAN AREA
*
*WTO AREA
WTOAREA  DS    0CL128
WTOLEN   DS    CL2                ;WTO MESSAGE LENGTH
WTOMSG   DS    CL126              ;WTO MESSAGE BUFFER, MAX 126 BYTES.
*
PARMLEN  DS    CL2                ;THE LENGTH OF THE PARM
PARM     DS    CL126              ;PARAMETER FROM
*
CMDAREA  DS    0CL128             ;COMMAND AREA
CMDLEN   DS    AL2                ;COMMAND LENGTH, MAXIMUM 126 BYTES
CMDTEXT  DS    CL126              ;COMMAND TEXT, MAXIMUM 126 BYTES
*CONSOLE NAME
CCONNAME DS    CL8                ;CONSOLE NAME
*TIOT AREA
TIOTA    DS    F                  TIOT ADDRESS
*MCSOPER REQUIRED DATA STOREAGE
*
         DS    0F
OPERDATA DS    CL(MCSOPLEN)
HCCONSNM DS    CL8
HCCONSID DS    CL4
HCSTATUS DS    A
HCSTATAL DS    F
HCMECB   DS    F
HCRETC   DS    F
HCRSNC   DS    F
         MCSOPER MF=(L,MCSOPPL)
EXTRMFL  EXTRACT MF=L                      ;EXTRACT JOB NAME INFO
*
DATAEND  EQU   *-DATAAREA         ;LENGTH OF DATA AREA
*
*---------------------------------------------------------------------*
*  SYSTEM DSECTS AND MACROS                                           *
*---------------------------------------------------------------------*
         IEZVG111
         IEZMGCR
         IHAPSA
         IHAASCB
         IEFTIOT1
*
*---------------------------------------------------------------------*
*  END OF PROGRAM                                                     *
*---------------------------------------------------------------------*
         END   CONSCMD
