***********************************************************************
* PROGRAM: WTO                                                        *
* AUTHOR : Hunter Guanghui Zhou                                       *
*          Phone: 1-(416)-602-9567                                    *
*          E-mail: zhough2000@yahoo.com                               *
* UPDATE : April 2003                                                 *
* PURPOSE: Issue message to MVS console and SYSLOG.                   *
* USAGE:                                                              *
*    1. USING EXEC PARM.                                              *
*       Send messages supplied in EXEC PARM to console.               *
*       This is the primary choice.                                   *
*       Sample JCL:                                                   *
*                                                                     *
*    //WTOMSG EXEC PGM=WTO,    issue normal WTO message               *
*    //    PARM='Hello, this is a test WTO message.'                  *
*    //WTOH   EXEC PGM=WTOH,   issue high lighted message             *
*    //    PARM='System is IPLed, TSO user can logon on now.'         *
*                                                                     *
*    2. USING SYSIN DD                                                *
*       Send messages supplied in SYSIN DD to console.                *
*       This is the secondary choice.                                 *
*       The SYSIN DD must be record length of 80                      *
*       The maximum lines is defined at compile time.                 *
*       Sample JCL:                                                   *
*                                                                     *
*    //WTOMSG EXEC PGM=WTO                                            *
*    //SYSIN DD *                                                     *
*    This is a test WTO message line 1.                               *
*    This is a test WTO message line 2.                               *
*    ...                                                              *
*    /*                                                               *
*                                                                     *
* COMPILE:                                                            *
*  This program is a re-entreent program, you can put this program    *
*  in your system LPA (LPALSTxx) or LINKLST (PROGxx).                 *
*  The linkedit should use RENT keyword to make it re-retreent.       *
*  Compile Option                                                     *
*  HILIGHT=   Tell whether to send high lighted WTO messages          *
*  MAXLINE=   Tell the limit of lines in SYSIN DD to send to WTO.     *
*                                                                     *
*  Sample Compile JCL for normal WTO                                  *
*  //jobcard                                                          *
*  // SET  SRCLIB='SP2487.ASM.SOURCE',   <==PDS where source located  *
*  //      LOADLIB='SYS1.TEST.LINKLIB'                                *
*  //* WTO IS A REENTRENT PROGRAM                                     *
*  //CPLCMDS  EXEC ASMACL,PARM.L='LIST,RENT',                         *
*  //  PARM.C='SYSPARM(HILIGHT=0,MAXLINE=100)'                        *
*  //C.SYSIN   DD DISP=SHR,DSN=&SRCLIB(WTO)                           *
*  //C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB                            *
*  //          DD DISP=SHR,DSN=SYS1.MODGEN                            *
*  //L.SYSLMOD DD DISP=SHR,DSN=&LOADLIB                               *
*  //L.SYSIN   DD *                                                   *
*    NAME WTO(R)                                                      *
*  /*                                                                 *
*                                                                     *
*  Sample Compile JCL for highlighted WTO:                            *
*  //jobcard                                                          *
*  // SET  SRCLIB='SP2487.ASM.SOURCE',   <==PDS where source located  *
*  //      LOADLIB='SYS1.TEST.LINKLIB'                                *
*  //* WTO IS A REENTRENT PROGRAM                                     *
*  //CPLCMDS  EXEC ASMACL,PARM.L='LIST,RENT',                         *
*  //  PARM.C='SYSPARM(HILIGHT=1,MAXLINE=100)'                        *
*  //C.SYSIN   DD DISP=SHR,DSN=&SRCLIB(WTO)                           *
*  //C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB                            *
*  //          DD DISP=SHR,DSN=SYS1.MODGEN                            *
*  //L.SYSLMOD DD DISP=SHR,DSN=&LOADLIB                               *
*  //L.SYSIN   DD *                                                   *
*    NAME WTOH(R)                                                     *
*  /*                                                                 *
*                                                                     *
* Program Logic:                                                      *
*  1. Program Setup                                                   *
*  2. Test if any given PARM.                                         *
*  3. If not, test any given SYSIN DD.                                *
*  4. Build up WTO lists.                                             *
*  5. Issue WTO message                                               *
*                                                                     *
***********************************************************************
*        PRINT NOGEN
WTO      TITLE 'WRITE MESSAGE TO CONSOLE AND SYSLOG'
WTO      CSECT
WTO      AMODE 31
WTO      RMODE ANY
* LOCAL CONSTANTS
         LCLC  &HILITE,&MAXLINE
&HILIGHT SETC  '&SYSPARM'(9,1)          FLAG TO HIGH LIGHT MESSAGE
&MAXLINE SETC  '&SYSPARM'(19,*)           MAXIMUM LINES IN SYSIN
***********************************************************************
* COMPILE STAGE SYSPARM SYNTAX CHECKING
***********************************************************************
         AIF   ('&HILIGHT' NE '1' AND '&HILIGHT' NE '0').ERRHILT,      X
               ('&MAXLINE' EQ '' OR '&MAXLINE' EQ '0').ERRMSGS
         AGO   .START
.ERRHILT MNOTE 12,'The high light (HILIGHT=&HILIGHT) is not 0 or 1.'
         AGO   .END
.ERRMSGS MNOTE 12,'The maximum WTO lines must between 1 and 9999.'
         AGO   .END
.START   ANOP
*---------------------------------------------------------------------*
* DEFINE REGISTER EQUALS USING IBM STANDARD MACRO YREGS               *
*---------------------------------------------------------------------*
         YREGS
*---------------------------------------------------------------------*
* BUILD LINKAGE CONVENTION:                                           *
* STEP 1: SAVE THE CURRENT REGISTERS TO CALLERS SAVE AREA             *
* STEP 2: BUILD OUR OWN ADDRESSABILITY                                *
* STEP 3: SAVE THE CALLERS ADDRESS (R13) INTO OUR SAVE AREA + 4       *
* STEP 4: SAVE THE OUR STARTING ADDRESS INTO R13                      *
*         THIS IS TO BUILD THE LINKAGE CHAIN                          *
*---------------------------------------------------------------------*
* ESTABLISH ADDRESSABILITY, USING R15 AS TEMPORARY BASE REGISTER
         USING WTO,R15            ; R15 IS CURRENT ADDRESS, USING IT
         B     WTOSTART           Branch around constants
         DC    CL23'PROGRAM NAME(WTO)'           Module identifier
         DC    CL29'COMPILE TIME(&SYSDATE &SYSTIME)'
         DC    CL48'WTO: Write Message to Console and SYSLOG'
         DC    CL36'CONFIG: HIGHLIGHT(&HILIGHT) MAXLINES(&MAXLINE)'
         DC    CL48'Design: Hunter Zhou, zhough2000@yahoo.com    '
WTOSTART DS    0H
         SAVE  (14,12)            ; SAVE CALLER'S REGISTERS USING SAVE
         LR    R12,R15            ; COPY THE CURRENT CSECT LOCATION
         DROP  R15                ; DROP THE TEMPORARY USING
         USING WTO,R12            ;
         MODID BRANCH=YES         ;
* SAVE THE PARM ADDRESS INTO R2
         LR    R2,R1              ; COPY THE PARM ADDR FROM R1 TO R2
*---------------------------------------------------------------------*
* DYNAMICALLY ALLOCATE STORAGE FOR DATA AREAS
*---------------------------------------------------------------------*
         GETMAIN RC,LV=DSALEN,LOC=BELOW ;ALLOCATE STORAGE DSALEN BYTES
         LTR   R15,R15            ;TEST THE RETURN CODE
         BNZ   MAINERR            ;IF FAILED, RETURN TO MAINERR
         LR    R11,R1             ;ADDR OF ENTRY POINT
         USING DSA,R11            ;USING R11 AS STOR ADDRESSING REGS.
         ST    R13,SAVEAREA+4     ;SET OUR BACKWARD LINK
         LA    R15,SAVEAREA       ;ADDR OF OUR SAVEAREA
         ST    R15,8(R13)         ;SET CALLER'S FORWARD LINK
         LR    R13,R15            ;ADDR OF OUR SAVEAREA
*---------------------------------------------------------------------*
* INITIALIZATION
*---------------------------------------------------------------------*
         XC    RETCODE,RETCODE    ; RESET RETURN CODE 0
         MVC   WTOCMD(WTOMDLL),WTOMDL  ;COPY THE MVC MODEL TO MVCCMD
* LOAD THE JOBNAME AS WTO PREFIX
         LA    R9,TIOTA
         EXTRACT (R9),'S',FIELDS=(TIOT),MF=(E,EXTRMFL) JOB NAME INFO
         L     R9,TIOTA           TIOT ADDRESS
         USING TIOT1,R9           TIOT ADDRESSABILITY
         MVC   WTOJOBNM,TIOCNJOB  COPY THE JOBNAME AS CONSOL NAME
         MVI   WTOSPACE,C' '      COPY ONE SPACE
         DROP  R9
*---------------------------------------------------------------------*
* SAVE THE PARAMETER TO PRIVATE STORAGE (PARM AND PARMLEN)
*---------------------------------------------------------------------*
         L     R2,0(,R2)          ;START  OF PARM
         LH    R9,0(,R2)          ;LENGTH OF PARM
         LTR   R9,R9              ;R9 IS ZERO?
         BZ    NOPARM             ;NO PARM GIVEN
         LA    R10,2(,R2)         ;START OF PARM DATA
         STCM  R9,B'0011',PARMLEN ;COPY THE PARAMETER LENGTH TO PARMLEN
         BCTR  R9,0               ;DECREMENT LENGTH BY 1
         EX    R9,MVCPARM         ;COPY PARMATER TO PARM STORAGE
*---------------------------------------------------------------------*
* SEND A MESSAGE TO CONSOLE USING WTO MESSAGE
*---------------------------------------------------------------------*
         BAL   R2,WTOPARM         ;CALL WTOPARM
         B     RETURN
* PROCESS SYSIN DD
NOPARM   EQU   *
         BAL   R2,WTOSYSIN        ;CALL WTOSYSIN
         B     RETURN
MAINERR  EQU   *
         LA    R15,X'10'
         B     MAINEXIT
*---------------------------------------------------------------------*
*  RETURN LINKAGE TO THE CALLER                                       *
*---------------------------------------------------------------------*
RETURN   EQU   *
*  AS FREE ALLOCATION WILL USE R15, JUST LOAD TO R9 TEMPORARILY
         XR    R9,R9
         ICM   R9,B'0001',RETCODE   ;LOAD THE RETURN CODE TO R9
*  FREE ANY ALLOCATION HERE ...
         FREEMAIN RU,LV=DSALEN,A=(R11)  ; THE ALLOCATED STORAGE
*  LOAD THE RETURN CODE TO R15.
         LR    R15,R9               ;SAVE THE RETURN CODE TO R15
MAINEXIT L     R13,4(R13)           ;ADDR OF CALLER'S SAVEAREA
         RETURN (14,12),RC=(15)     ;RESTORE CALLER'S REGS AND RETURN
***********************************************************************
* ROUTINE: WTOPARM                                                    *
* PURPOSE: SEND WTO MESSAGE FOR EXEC PARM                             *
* INPUT  :                                                            *
*    R2  : RETURN CONTROL                                             *
*    R2  : RETURN CONTROL                                             *
***********************************************************************
WTOPARM  EQU   *
         SR    R9,R9               ;CLEAR R9
         ICM   R9,B'0011',PARMLEN  ;LOAD THE PARAMETER LENGTH TO R9
         LA    R10,PARM            ;LOAD PARAMETER ADDRESS TO R10
         BCTR  R9,0                ;DECREMENT LENGTH BY 1
         EX    R9,MVCWTO           ;COPY PARMATER TO WTO  STORAGE
         LA    R9,10(0,R9)         ;INCREASE R9 BY 9 JOBNAME + SPACE
         STH   R9,WTOLEN           ;COPY PARAMETER LENGTH TO WTOLEN
         BAL   R3,WTOBRDR          SHOW THE MESSAGE BORDER
         BAL   R3,WTOWRITE         SHOW THE MESSAGE ON CONSOLE
         BAL   R3,WTOBRDR          SHOW THE MESSAGE BORDER
         BR    R2
***********************************************************************
* ROUTINE: WTOSYSIN                                                   *
* PURPOSE: SEND WTO MESSAGE FOR SYSIN DD                              *
* INPUT  :                                                            *
*    R2  : RETURN CONTROL                                             *
***********************************************************************
WTOSYSIN DS    0H
* INITIAL SYSIN DCB/DCBE
         MVC   SYSIN(CSYSINL),CSYSIN       COPY DCB
         MVC   SINDCBE(CSINDCEL),CSINDCBE  COPY DCBE
         MVC   SINOPLST(CSINOPLL),CSINOPL  COPY OPEN LIST
         LA    R4,SINDCBE
         ST    R4,SYSIN+(DCBDCBE-IHADCB)   UPDATE DCBE IN DCB
         LA    R4,SYSIN
         ST    R4,SINOPLST+4               UPDATE DCB IN OPEN LIST
* OPEN THE SYSIN
         OPEN  (SYSIN,(INPUT)),MODE=31,MF=(E,SINOPLST)  OPEN THE DCB
         LTR   R15,R15            OPEN SUCCESSFULLY?
         BNZ   WTOSWARN           NO, SYSIN DD NOT SPECIFIED
         L     R4,MAXLINE         MAX NO. OF MESSAGES IN SYSIN
         LA    R8,WTOMSG          LOAD THE WTO MESSAGE BUFFER
         BAL   R3,WTOBRDR         SHOW THE MESSAGE BORDER
WTOSGET  GET   SYSIN,(R8)         GET ONE MESSAGE RECORD
         LR    R6,R8              LOAD THE START POSITION
         LA    R5,79              CHECK OF MESSAGE TEXT LENGTH 80
         AR    R6,R5              MOVE TO THE END OF MESSAGE
WTOSCHK  CLI   0(R6),C' '         BLANK?
         BNE   WTOS001            NO, LAST CHAR OF MESSAGE?
         BCTR  R6,0               MOVE TO NEXT CHAR
         BCT   R5,WTOSCHK         CHECK NEXT CHARACTER
WTOS001  EQU   *
         LA    R5,10(0,R5)        ADD 10 TO MESSAGE LENGTH
         STH   R5,WTOLEN          COPY PARAMETER LENGTH TO WTOLEN
         BAL   R3,WTOWRITE        SHOW THE MESSAGE ON CONSOLE
         BCT   R4,WTOSGET         GET NEXT MESSAGE RECORD
* CLOSE THE SYSIN WITH THE SAME LIST FORM AS OPEN MACRO
SYSINEOF EQU      *
         BAL   R3,WTOBRDR         SHOW THE MESSAGE BORDER
         CLOSE SYSIN,MODE=31,MF=(E,SINOPLST)
         B     WTOSEND
WTOSWARN EQU   *
         MVI   RETCODE,X'04'
WTOSEND  EQU   *
         BR    R2
***********************************************************************
* ROUTINE: WTOWRITE                                                   *
* PURPOSE: SEND WTO MESSAGE FOR ALL CASES                             *
* INPUT  :                                                            *
*    R3  : RETURN CONTROL                                             *
***********************************************************************
WTOWRITE EQU   *
         LA    R9,WTOAREA
         CLI   HILIGHT,X'01'   NEED A HIGH LIGHT MESSAGE?
         BNE   WTOWNHL         NO, JUST SEND NORMAL WTO MESSAGE
         WTO   TEXT=(R9),ROUTCDE=(2),DESC=(11),                        X
               MCSFLAG=(BUSYEXIT,BRDCST),MF=(E,WTOCMD)
         B     WTOWEND
WTOWNHL  EQU   *               NON-HIGHLIGHT NORMAL MESSAGES
         WTO   TEXT=(R9),MF=(E,WTOCMD)
WTOWEND  EQU   *
         BR    R3
***********************************************************************
* ROUTINE: WTOBRDR                                                    *
* PURPOSE: SHOW WTO MESSAGE BORDER                                    *
* INPUT  :                                                            *
*    R3  : RETURN CONTROL                                             *
***********************************************************************
WTOBRDR  EQU   *
         WTO   '*******************************************************X
               ******'
         BR    R3
***********************************************************************
*  PROGRAM CONSTANTS
*---------------------------------------------------------------------*
HILIGHT  DC    X'0&HILIGHT'        ;WHETHER THE MESSAGES ARE HIGH LIGHT
MAXLINE  DC    A(&MAXLINE)        ;MAXIMUM MESSAGES IN LINES
MVCPARM  MVC   PARM(0),0(R10)     ;COPY THE PARAMETER TO STORAGE PARM
MVCWTO   MVC   WTOMSG(0),0(R10)   ;COPY THE WTO MESSAGE TO WTOMSG
         AIF   ('&HILIGHT' EQ '1').AMDLHI
WTOMDL   WTO   TEXT=,MF=L
         AGO   .AMDLEND
.AMDLHI  ANOP
WTOMDL   WTO   TEXT=,ROUTCDE=(2),DESC=(11),                            X
               MCSFLAG=(BUSYEXIT,BRDCST),MF=L
.AMDLEND ANOP
WTOMDLL  EQU   *-WTOMDL           ;LENGTH OF WTO MODEL
*---------------------------------------------------------------------*
* CSYSIN   CONSTANT DCB/DCBE/OPENLIST
* CSYSIN   CONSTANT DCB FOR SYSIN DD WITH READ
*---------------------------------------------------------------------*
CSYSIN   DCB   DSORG=PS,                                               X
               MACRF=GM,                                               X
               DDNAME=SYSIN,                                           X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               DCBE=CSINDCBE
CSYSINL  EQU   *-CSYSIN                LENGTH OF THE OPENLIST
CSINDCBE DCBE  RMODE31=BUFF,EODAD=SYSINEOF
CSINDCEL EQU   *-CSINDCBE
CSINOPL  OPEN  (CSYSIN,(INPUT)),MODE=31,MF=L
CSINOPLL EQU   *-CSINOPL               LENGTH OF THE OPENLIST
***********************************************************************
*---------------------------------------------------------------------*
* DATA STORAGE IN DYNAMIC MODE                                        *
* THESE DATA STORAGES WILL BE UPDATED DURING EXECUTION.
*---------------------------------------------------------------------*
* DUMMY SECTION
         DS    0F
DSA      DSECT
SAVEAREA DS    18F                ;REGISTER SAVE AREA
RETCODE  DS    XL1                ;RETURN CODE
*WTO AREA
         DS    0F
WTOAREA  DS    0CL128
WTOLEN   DS    AL2                ;WTO MESSAGE LENGTH
WTOJOBNM DS    CL8                ;JOBNAME AS PREFIX
WTOSPACE DS    CL1                ;SPACE
WTOMSG   DS    CL118              ;WTO MESSAGE BUFFER, MAX 117 BYTES.
*
         DS    0F
PARMLEN  DS    AL2                ;THE LENGTH OF THE PARM
PARM     DS    CL126              ;PARAMETER FROM
*
*TIOT AREA
TIOTA    DS    F                  TIOT ADDRESS
* MACRO LIST FORMS
EXTRMFL  EXTRACT MF=L                      ;EXTRACT JOB NAME INFO
         AIF   ('&HILIGHT' EQ '1').AMDLHI2
WTOCMD   WTO   TEXT=,MF=L
         AGO   .AMDLEN2
.AMDLHI2 ANOP
WTOCMD   WTO   TEXT=,ROUTCDE=(2),DESC=(11),                            X
               MCSFLAG=(BUSYEXIT,BRDCST),MF=L
.AMDLEN2 ANOP
*
*---------------------------------------------------------------------*
* SYSIN  DCB/DCBE/OPEN LIST FORM
* THE DCB MUST BE ALLOCATED BELOW 16MB LINE,
* SO THE GETMAIN FOR THIS DSECT MUST CODE LOC=BELOW
*---------------------------------------------------------------------*
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,                         X
               RECFM=FB,LRECL=80,DCBE=CSINDCBE
SINDCBE  DCBE  RMODE31=BUFF,EODAD=SYSINEOF
SINOPLST OPEN  (CSYSIN,(INPUT)),MODE=31,MF=L
DSALEN   EQU   *-DSA
*---------------------------------------------------------------------*
*  SYSTEM DSECTS AND MACROS                                           *
*---------------------------------------------------------------------*
TIOT     DSECT
         IEFTIOT1
*  SYSTEM DSECTS FOR DCB/DCBE
*        'Data Control Block (DCB)'
         DCBD  DSORG=PS,DEVD=DA
*        'DCB Extension (DCBE)'
         IHADCBE
*---------------------------------------------------------------------*
*  END OF PROGRAM                                                     *
*---------------------------------------------------------------------*
.END     END   WTO
